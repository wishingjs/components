var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/features/configPlugins/schema.ts
var schema_exports = {};
__export(schema_exports, {
  getSchemas: () => getSchemas
});
module.exports = __toCommonJS(schema_exports);
var import_utils = require("@umijs/utils");
function getSchemas() {
  return {
    analyze: (Joi) => Joi.object(),
    base: (Joi) => Joi.string(),
    conventionRoutes: (Joi) => Joi.object({
      base: Joi.string(),
      exclude: Joi.array().items(Joi.any())
    }),
    headScripts: (Joi) => Joi.array(),
    history: (Joi) => Joi.object({
      type: Joi.string().valid("browser", "hash", "memory")
    }),
    historyWithQuery: (Joi) => Joi.object(),
    links: (Joi) => Joi.array(),
    metas: (Joi) => Joi.array(),
    mountElementId: (Joi) => Joi.string(),
    npmClient: (Joi) => Joi.string().valid(
      import_utils.NpmClientEnum.pnpm,
      import_utils.NpmClientEnum.tnpm,
      import_utils.NpmClientEnum.cnpm,
      import_utils.NpmClientEnum.yarn,
      import_utils.NpmClientEnum.npm
    ),
    plugins: (Joi) => Joi.array().items(Joi.string()),
    presets: (Joi) => Joi.array().items(Joi.string()),
    publicPath: (Joi) => Joi.string().regex(/(\/|^auto)$/).error(new Error('publicPath must be "auto" or end with /')),
    reactRouter5Compat: (Joi) => Joi.object(),
    routes: (Joi) => Joi.array().items(Joi.object()),
    scripts: (Joi) => Joi.array(),
    styles: (Joi) => Joi.array(),
    title: (Joi) => Joi.string()
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getSchemas
});
