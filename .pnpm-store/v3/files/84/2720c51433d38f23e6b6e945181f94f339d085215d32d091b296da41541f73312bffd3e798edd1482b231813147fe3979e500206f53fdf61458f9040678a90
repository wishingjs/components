"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderLogoAndTitle = exports.SiderMenu = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
var _proProvider = require("@ant-design/pro-provider");
var _antd = require("antd");
var _classnames = _interopRequireDefault(require("classnames"));
var _AppsLogoComponents = require("../AppsLogoComponents");
var _CollapsedIcon = require("../CollapsedIcon");
var _BaseMenu = require("./BaseMenu");
var _stylish = require("./style/stylish");
var Sider = _antd.Layout.Sider;
/**
 * 渲染 title 和 logo
 *
 * @param props
 * @param renderKey
 * @returns
 */
var renderLogoAndTitle = function renderLogoAndTitle(props) {
  var renderKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'menuHeaderRender';
  var logo = props.logo,
    title = props.title,
    layout = props.layout;
  var renderFunction = props[renderKey || ''];
  if (renderFunction === false) {
    return null;
  }
  var logoDom = (0, _AppsLogoComponents.defaultRenderLogo)(logo);
  var titleDom = (0, _jsxRuntime.jsx)("h1", {
    children: title !== null && title !== void 0 ? title : 'Ant Design Pro'
  });
  if (renderFunction) {
    // when collapsed, no render title
    return renderFunction(logoDom, props.collapsed ? null : titleDom, props);
  }
  /**
   * 收起来时候直接不显示
   */
  if (props.isMobile) {
    return null;
  }
  if (layout === 'mix' && renderKey === 'menuHeaderRender') return false;
  if (props.collapsed) {
    return (0, _jsxRuntime.jsx)("a", {
      children: logoDom
    }, "title");
  }
  return (0, _jsxRuntime.jsxs)("a", {
    children: [logoDom, titleDom]
  }, "title");
};
exports.renderLogoAndTitle = renderLogoAndTitle;
var SiderMenu = function SiderMenu(props) {
  var _classNames, _props$menu2, _process$env$NODE_ENV, _token$layout, _token$layout$sider, _token$layout2, _token$layout2$sider, _token$layout3, _token$layout3$sider, _token$layout4, _token$layout4$sider, _token$layout5, _token$layout5$sider, _token$layout6, _token$layout6$sider;
  var collapsed = props.collapsed,
    originCollapsed = props.originCollapsed,
    fixSiderbar = props.fixSiderbar,
    menuFooterRender = props.menuFooterRender,
    _onCollapse = props.onCollapse,
    theme = props.theme,
    siderWidth = props.siderWidth,
    isMobile = props.isMobile,
    onMenuHeaderClick = props.onMenuHeaderClick,
    _props$breakpoint = props.breakpoint,
    breakpoint = _props$breakpoint === void 0 ? 'lg' : _props$breakpoint,
    style = props.style,
    layout = props.layout,
    _props$menuExtraRende = props.menuExtraRender,
    menuExtraRender = _props$menuExtraRende === void 0 ? false : _props$menuExtraRende,
    links = props.links,
    menuContentRender = props.menuContentRender,
    collapsedButtonRender = props.collapsedButtonRender,
    prefixCls = props.prefixCls,
    avatarProps = props.avatarProps,
    rightContentRender = props.rightContentRender,
    actionsRender = props.actionsRender,
    onOpenChange = props.onOpenChange,
    stylish = props.stylish,
    logoStyle = props.logoStyle;
  var _useContext = (0, _react.useContext)(_proProvider.ProProvider),
    hashId = _useContext.hashId;
  var showSiderExtraDom = (0, _react.useMemo)(function () {
    if (isMobile) return false;
    if (layout === 'mix') return false;
    return true;
  }, [isMobile, layout]);
  var baseClassName = "".concat(prefixCls, "-sider");
  // 之所以这样写是为了提升样式优先级，不然会被sider 自带的覆盖掉
  var stylishClassName = (0, _stylish.useStylish)("".concat(baseClassName, ".").concat(baseClassName, "-stylish"), {
    stylish: stylish,
    proLayoutCollapsedWidth: 64
  });
  var siderClassName = (0, _classnames.default)("".concat(baseClassName), hashId, (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-fixed"), fixSiderbar), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-collapsed"), props.collapsed), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-layout-").concat(layout), layout && !isMobile), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-light"), theme !== 'dark'), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-mix"), layout === 'mix' && !isMobile), (0, _defineProperty2.default)(_classNames, "".concat(baseClassName, "-stylish"), !!stylish), _classNames));
  var headerDom = renderLogoAndTitle(props);
  var extraDom = menuExtraRender && menuExtraRender(props);
  var menuDom = (0, _react.useMemo)(function () {
    return menuContentRender !== false && /*#__PURE__*/(0, _react.createElement)(_BaseMenu.BaseMenu, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
      key: "base-menu",
      mode: "inline",
      handleOpenChange: onOpenChange,
      style: {
        width: '100%'
      },
      className: "".concat(baseClassName, "-menu ").concat(hashId)
    }));
  }, [baseClassName, hashId, menuContentRender, onOpenChange, props]);
  var linksMenuItems = (links || []).map(function (node, index) {
    return {
      className: "".concat(baseClassName, "-link"),
      label: node,
      key: index
    };
  });
  var menuRenderDom = (0, _react.useMemo)(function () {
    return menuContentRender ? menuContentRender(props, menuDom) : menuDom;
  }, [menuContentRender, menuDom, props]);
  var avatarDom = (0, _react.useMemo)(function () {
    return avatarProps && (0, _jsxRuntime.jsxs)(_antd.Space, {
      align: "center",
      className: "".concat(baseClassName, "-actions-avatar"),
      children: [(0, _jsxRuntime.jsx)(_antd.Avatar, (0, _objectSpread2.default)({
        size: 28
      }, avatarProps)), avatarProps.title && !collapsed && (0, _jsxRuntime.jsx)("span", {
        children: avatarProps.title
      })]
    });
  }, [avatarProps, baseClassName, collapsed]);
  var actionsDom = (0, _react.useMemo)(function () {
    if (!actionsRender) return null;
    return (0, _jsxRuntime.jsx)(_antd.Space, {
      align: "center",
      size: 4,
      direction: collapsed ? 'vertical' : 'horizontal',
      className: (0, _classnames.default)(["".concat(baseClassName, "-actions-list"), collapsed && "".concat(baseClassName, "-actions-list-collapsed"), hashId]),
      children: actionsRender === null || actionsRender === void 0 ? void 0 : actionsRender(props).map(function (item, index) {
        return (0, _jsxRuntime.jsx)("div", {
          className: "".concat(baseClassName, "-actions-list-item ").concat(hashId),
          children: item
        }, index);
      })
    });
  },
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [actionsRender, baseClassName, collapsed]);
  var appsDom = (0, _react.useMemo)(function () {
    return (0, _jsxRuntime.jsx)(_AppsLogoComponents.AppsLogoComponents, {
      itemClick: props.itemClick,
      appList: props.appList,
      prefixCls: props.prefixCls
    });
  }, [props.appList, props.prefixCls]);
  var collapsedDom = (0, _react.useMemo)(function () {
    if (collapsedButtonRender === false) return null;
    var dom = (0, _jsxRuntime.jsx)(_CollapsedIcon.CollapsedIcon, {
      isMobile: isMobile,
      collapsed: originCollapsed,
      className: "".concat(baseClassName, "-collapsed-button"),
      onClick: function onClick() {
        _onCollapse === null || _onCollapse === void 0 ? void 0 : _onCollapse(!originCollapsed);
      }
    });
    if (collapsedButtonRender) return collapsedButtonRender(collapsed, dom);
    return dom;
  }, [collapsedButtonRender, isMobile, originCollapsed, baseClassName, collapsed, _onCollapse]);
  /** 操作区域的dom */
  var actionAreaDom = (0, _react.useMemo)(function () {
    if (!avatarDom && !actionsDom) return null;
    return (0, _jsxRuntime.jsxs)("div", {
      className: (0, _classnames.default)("".concat(baseClassName, "-actions"), hashId, collapsed && "".concat(baseClassName, "-actions-collapsed")),
      children: [avatarDom, actionsDom]
    });
  }, [actionsDom, avatarDom, baseClassName, collapsed, hashId]);
  var collapsedWidth = 60;
  /* Using the useMemo hook to create a CSS class that will hide the menu when the menu is collapsed. */
  var hideMenuWhenCollapsedClassName = (0, _react.useMemo)(function () {
    var _props$menu;
    // 收起时完全隐藏菜单
    if ((props === null || props === void 0 ? void 0 : (_props$menu = props.menu) === null || _props$menu === void 0 ? void 0 : _props$menu.hideMenuWhenCollapsed) && collapsed) {
      return "".concat(baseClassName, "-hide-menu-collapsed");
    }
    return null;
  }, [baseClassName, collapsed, props === null || props === void 0 ? void 0 : (_props$menu2 = props.menu) === null || _props$menu2 === void 0 ? void 0 : _props$menu2.hideMenuWhenCollapsed]);
  var menuFooterDom = menuFooterRender && (menuFooterRender === null || menuFooterRender === void 0 ? void 0 : menuFooterRender(props));
  var menuDomItems = (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [headerDom && (0, _jsxRuntime.jsxs)("div", {
      className: (0, _classnames.default)([(0, _classnames.default)("".concat(baseClassName, "-logo"), hashId, (0, _defineProperty2.default)({}, "".concat(baseClassName, "-logo-collapsed"), collapsed))]),
      onClick: showSiderExtraDom ? onMenuHeaderClick : undefined,
      id: "logo",
      style: logoStyle,
      children: [headerDom, appsDom]
    }), extraDom && (0, _jsxRuntime.jsx)("div", {
      className: (0, _classnames.default)(["".concat(baseClassName, "-extra"), !headerDom && "".concat(baseClassName, "-extra-no-logo"), hashId]),
      children: extraDom
    }), (0, _jsxRuntime.jsx)("div", {
      style: {
        flex: 1,
        overflowY: 'auto',
        overflowX: 'hidden'
      },
      children: menuRenderDom
    }), links ? (0, _jsxRuntime.jsx)("div", {
      className: "".concat(baseClassName, "-links ").concat(hashId),
      children: (0, _jsxRuntime.jsx)(_antd.Menu, {
        inlineIndent: 16,
        className: "".concat(baseClassName, "-link-menu ").concat(hashId),
        selectedKeys: [],
        openKeys: [],
        theme: "light",
        mode: "inline",
        items: linksMenuItems
      })
    }) : null, showSiderExtraDom && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [actionAreaDom, rightContentRender ? (0, _jsxRuntime.jsx)("div", {
        className: (0, _classnames.default)("".concat(baseClassName, "-actions"), hashId, (0, _defineProperty2.default)({}, "".concat(baseClassName, "-actions-collapsed"), collapsed)),
        children: rightContentRender === null || rightContentRender === void 0 ? void 0 : rightContentRender(props)
      }) : null]
    }), menuFooterDom && (0, _jsxRuntime.jsx)("div", {
      className: (0, _classnames.default)(["".concat(baseClassName, "-footer"), hashId, (0, _defineProperty2.default)({}, "".concat(baseClassName, "-footer-collapsed"), collapsed)]),
      children: menuFooterDom
    })]
  });
  var _useContext2 = (0, _react.useContext)(_proProvider.ProProvider),
    token = _useContext2.token;
  return stylishClassName.wrapSSR((0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [fixSiderbar && !isMobile && !hideMenuWhenCollapsedClassName && (0, _jsxRuntime.jsx)("div", {
      style: (0, _objectSpread2.default)({
        width: collapsed ? collapsedWidth : siderWidth,
        overflow: 'hidden',
        flex: "0 0 ".concat(collapsed ? collapsedWidth : siderWidth, "px"),
        maxWidth: collapsed ? collapsedWidth : siderWidth,
        minWidth: collapsed ? collapsedWidth : siderWidth,
        transition: 'all 0.2s ease 0s'
      }, style)
    }), (0, _jsxRuntime.jsxs)(Sider, {
      collapsible: true,
      trigger: null,
      collapsed: collapsed,
      breakpoint: breakpoint === false ? undefined : breakpoint,
      onCollapse: function onCollapse(collapse) {
        if (isMobile) return;
        _onCollapse === null || _onCollapse === void 0 ? void 0 : _onCollapse(collapse);
      },
      collapsedWidth: collapsedWidth,
      style: style,
      theme: "light",
      width: siderWidth,
      className: (0, _classnames.default)(siderClassName, hashId, hideMenuWhenCollapsedClassName),
      children: [(0, _jsxRuntime.jsx)(_antd.ConfigProvider, {
        theme: {
          hashed: ((_process$env$NODE_ENV = process.env.NODE_ENV) === null || _process$env$NODE_ENV === void 0 ? void 0 : _process$env$NODE_ENV.toLowerCase()) !== 'test',
          components: {
            Menu: {
              radiusItem: 4,
              colorItemBgSelected: (token === null || token === void 0 ? void 0 : (_token$layout = token.layout) === null || _token$layout === void 0 ? void 0 : (_token$layout$sider = _token$layout.sider) === null || _token$layout$sider === void 0 ? void 0 : _token$layout$sider.colorBgMenuItemSelected) || 'rgba(0, 0, 0, 0.04)',
              colorItemBgActive: (token === null || token === void 0 ? void 0 : (_token$layout2 = token.layout) === null || _token$layout2 === void 0 ? void 0 : (_token$layout2$sider = _token$layout2.sider) === null || _token$layout2$sider === void 0 ? void 0 : _token$layout2$sider.colorBgMenuItemHover) || 'rgba(0, 0, 0, 0.04)',
              colorActiveBarWidth: 0,
              colorActiveBarHeight: 0,
              colorActiveBarBorderSize: 0,
              colorItemText: (token === null || token === void 0 ? void 0 : (_token$layout3 = token.layout) === null || _token$layout3 === void 0 ? void 0 : (_token$layout3$sider = _token$layout3.sider) === null || _token$layout3$sider === void 0 ? void 0 : _token$layout3$sider.colorTextMenu) || 'rgba(0, 0, 0, 0.65)',
              colorItemTextHover: (token === null || token === void 0 ? void 0 : (_token$layout4 = token.layout) === null || _token$layout4 === void 0 ? void 0 : (_token$layout4$sider = _token$layout4.sider) === null || _token$layout4$sider === void 0 ? void 0 : _token$layout4$sider.colorTextMenuActive) || 'rgba(0, 0, 0, 0.85)',
              colorItemTextSelected: (token === null || token === void 0 ? void 0 : (_token$layout5 = token.layout) === null || _token$layout5 === void 0 ? void 0 : (_token$layout5$sider = _token$layout5.sider) === null || _token$layout5$sider === void 0 ? void 0 : _token$layout5$sider.colorTextMenuSelected) || 'rgba(0, 0, 0, 1)',
              colorItemBg: 'transparent',
              colorSubItemBg: 'transparent',
              colorBgElevated: (token === null || token === void 0 ? void 0 : (_token$layout6 = token.layout) === null || _token$layout6 === void 0 ? void 0 : (_token$layout6$sider = _token$layout6.sider) === null || _token$layout6$sider === void 0 ? void 0 : _token$layout6$sider.colorBgMenuItemCollapsedElevated) || '#fff'
            }
          }
        },
        children: hideMenuWhenCollapsedClassName ? (0, _jsxRuntime.jsx)("div", {
          className: "".concat(baseClassName, "-hide-when-collapsed ").concat(hashId),
          style: {
            height: '100%',
            width: '100%',
            opacity: hideMenuWhenCollapsedClassName ? 0 : 1
          },
          children: menuDomItems
        }) : menuDomItems
      }), collapsedDom]
    })]
  }));
};
exports.SiderMenu = SiderMenu;