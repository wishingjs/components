var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/features/prepare/esbuildPlugins/esbuildExternalPlugin.ts
var esbuildExternalPlugin_exports = {};
__export(esbuildExternalPlugin_exports, {
  esbuildExternalPlugin: () => esbuildExternalPlugin
});
module.exports = __toCommonJS(esbuildExternalPlugin_exports);
var import_utils = require("@umijs/utils");
var import_path = __toESM(require("path"));
function esbuildExternalPlugin() {
  return {
    name: "esbuildExternalPlugin",
    setup(build) {
      externalsExtensions.forEach((ext) => {
        const filter = new RegExp(`.${ext}(\\?.*)?$`);
        build.onResolve({ filter }, () => {
          return {
            external: true
          };
        });
      });
      build.onResolve({ filter: /.*/ }, (args) => {
        if (args.path.startsWith(".")) {
          return null;
        }
        if (args.kind === "entry-point") {
          return null;
        }
        const winP = (0, import_utils.winPath)(args.path);
        const isAliasImport = winP.startsWith("@/") || winP.startsWith("@@/");
        if (isAliasImport) {
          return null;
        }
        const isNodeModuleImport = args.path.includes("node_modules");
        if (import_path.default.isAbsolute(args.path) && !isNodeModuleImport) {
          return null;
        }
        return {
          external: true
        };
      });
    }
  };
}
var externalsExtensions = [
  "aac",
  "css",
  "less",
  "sass",
  "scss",
  "eot",
  "flac",
  "gif",
  "html",
  "htm",
  "ico",
  "icon",
  "jpeg",
  "jpg",
  "json",
  "md",
  "mdx",
  "mp3",
  "mp4",
  "ogg",
  "otf",
  "png",
  "svg",
  "ttf",
  "wav",
  "webm",
  "webp",
  "woff",
  "woff2"
];
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  esbuildExternalPlugin
});
