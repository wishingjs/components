import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { defaultRenderLogo } from './index';
export var DefaultContent = function DefaultContent(props) {
  var appList = props.appList,
    baseClassName = props.baseClassName,
    hashId = props.hashId,
    itemClick = props.itemClick;
  return _jsx("div", {
    className: "".concat(baseClassName, "-content ").concat(hashId),
    children: _jsx("ul", {
      className: "".concat(baseClassName, "-content-list ").concat(hashId),
      children: appList === null || appList === void 0 ? void 0 : appList.map(function (app, index) {
        var _app$children;
        if (app === null || app === void 0 ? void 0 : (_app$children = app.children) === null || _app$children === void 0 ? void 0 : _app$children.length) {
          return _jsxs("div", {
            className: "".concat(baseClassName, "-content-list-item-group ").concat(hashId),
            children: [_jsx("div", {
              className: "".concat(baseClassName, "-content-list-item-group-title ").concat(hashId),
              children: app.title
            }), _jsx(DefaultContent, {
              hashId: hashId,
              itemClick: itemClick,
              appList: app === null || app === void 0 ? void 0 : app.children,
              baseClassName: baseClassName
            })]
          });
        }
        return _jsx("li", {
          className: "".concat(baseClassName, "-content-list-item ").concat(hashId),
          children: _jsxs("a", {
            href: itemClick ? 'javascript:;' : app.url,
            onClick: function onClick() {
              return itemClick === null || itemClick === void 0 ? void 0 : itemClick(app);
            },
            target: app.target,
            rel: "noreferrer",
            children: [defaultRenderLogo(app.icon), _jsxs("div", {
              children: [_jsx("div", {
                children: app.title
              }), app.desc ? _jsx("span", {
                children: app.desc
              }) : null]
            })]
          })
        }, index);
      })
    })
  });
};